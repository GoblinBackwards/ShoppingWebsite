@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Authorization.Infrastructure
@model IEnumerable<ShoppingWebsiteMvc.Models.StoreItem>
@inject IAuthorizationService AuthorizationService

@{
    ViewData["Title"] = "Storefront";
    bool isAdmin = (await AuthorizationService.AuthorizeAsync(User, "HasRoleAdmin")).Succeeded;
}

<h1>Storefront</h1>

@if (isAdmin)
{
    <p>
        <a class="btn btn-outline-primary" asp-action="Create">Create New</a>
    </p>
}

<div class="d-md-flex justify-content-evenly">
    @foreach(StoreItem item in Model)
    {
        <div class="d-grid flex-grow-1 border align-content-center rounded-2 p-3 m-2">
            <span class="text-center h3">@Html.DisplayFor(modelItem => item.Name)</span>
            <span class="h5">£@Html.DisplayFor(modelItem => item.PriceGBP)</span>
            @if (item.ImageFileName != null)
            {
                <img src="@item.ImageFileName" />
            }
            <a class="btn btn-outline-primary mb-2" asp-action="Details" asp-route-id="@item.Id">View More</a>
            <btn class="btn btn-success" onclick="addToCart(@item.Id)">Add To Cart <i class="fa-solid fa-cart-plus"></i></btn>
            @if (isAdmin)
            {
                <div class="border p-2 mt-2 text-center">
                    <a class="btn btn-warning" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                    <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </div>
            }
        </div>
    }
</div>

@section scripts {
    <script>
        async function addToCart(id) {
            try {
                const res = await fetch(`/cart/add/${id}`, {
                    method: 'POST'
                });
                if (res.ok) {
                    const data = await res.json();
                    const cartItemCount = data['cartItemCount'];
                    console.log(`there are now ${cartItemCount} items in your cart`);
                } else {
                    throw new Exception(`Unsuccessful response: ${res}`)
                }
            }
            catch (erorr) {
                console.error(error);
                alert('Failed to add to cart.');
            }
        }
    </script>
}